!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n="undefined"!=typeof globalThis?globalThis:n||self).visibilityGraph=t()}(this,(function(){"use strict";function n(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}var t=function(n){!function(n){if(!n)throw new Error("Eventify cannot use falsy object as events subject");for(var t=["on","fire","off"],e=0;e<t.length;++e)if(n.hasOwnProperty(t[e]))throw new Error("Subject cannot be eventified, since it already has property '"+t[e]+"'")}(n);var t=function(n){var t=Object.create(null);return{on:function(e,i,o){if("function"!=typeof i)throw new Error("callback is expected to be a function");var r=t[e];return r||(r=t[e]=[]),r.push({callback:i,ctx:o}),n},off:function(e,i){if(void 0===e)return t=Object.create(null),n;if(t[e])if("function"!=typeof i)delete t[e];else for(var o=t[e],r=0;r<o.length;++r)o[r].callback===i&&o.splice(r,1);return n},fire:function(e){var i,o=t[e];if(!o)return n;arguments.length>1&&(i=Array.prototype.splice.call(arguments,1));for(var r=0;r<o.length;++r){var s=o[r];s.callback.apply(s.ctx,i)}return n}}}(n);return n.on=t.on,n.off=t.off,n.fire=t.fire,n};var e=function(n){"uniqueLinkId"in(n=n||{})&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n","\n","Note: there is also change in default behavior: From now on each graph\nis considered to be not a multigraph by default (each edge is unique)."),n.multigraph=n.uniqueLinkId);void 0===n.multigraph&&(n.multigraph=!1);if("function"!=typeof Map)throw new Error("ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph");var t=new Map,e=new Map,u={},f=0,d=n.multigraph?function(n,t,e){var i=a(n,t),o=u.hasOwnProperty(i);if(o||M(n,t)){o||(u[i]=0);var r="@"+ ++u[i];i=a(n+r,t+r)}return new s(n,t,e,i)}:function(n,t,i){var o=a(n,t),r=e.get(o);if(r)return r.data=i,r;return new s(n,t,i,o)},h=[],l=_,c=_,p=_,g=_,y={version:20,addNode:x,addLink:function(n,t,i){p();var o=w(n)||x(n),s=w(t)||x(t),a=d(n,t,i),u=e.has(a.id);e.set(a.id,a),r(o,a),n!==t&&r(s,a);return l(a,u?"update":"add"),g(),a},removeLink:function(n,t){void 0!==t&&(n=M(n,t));return E(n)},removeNode:I,getNode:w,getNodeCount:m,getLinkCount:P,getEdgeCount:P,getLinksCount:P,getNodesCount:m,getLinks:function(n){var t=w(n);return t?t.links:null},forEachNode:L,forEachLinkedNode:function(n,e,i){var o=w(n);if(o&&o.links&&"function"==typeof e)return i?function(n,e,i){var o=n.values(),r=o.next();for(;!r.done;){var s=r.value;if(s.fromId===e&&i(t.get(s.toId),s))return!0;r=o.next()}}(o.links,n,e):function(n,e,i){var o=n.values(),r=o.next();for(;!r.done;){var s=r.value,a=s.fromId===e?s.toId:s.fromId;if(i(t.get(a),s))return!0;r=o.next()}}(o.links,n,e)},forEachLink:function(n){if("function"==typeof n)for(var t=e.values(),i=t.next();!i.done;){if(n(i.value))return!0;i=t.next()}},beginUpdate:p,endUpdate:g,clear:function(){p(),L((function(n){I(n.id)})),g()},hasLink:M,hasNode:w,getLink:M};return i(y),function(){var n=y.on;function t(){return y.beginUpdate=p=b,y.endUpdate=g=O,l=v,c=k,y.on=n,n.apply(y,arguments)}y.on=t}(),y;function v(n,t){h.push({link:n,changeType:t})}function k(n,t){h.push({node:n,changeType:t})}function x(n,e){if(void 0===n)throw new Error("Invalid node identifier");p();var i=w(n);return i?(i.data=e,c(i,"update")):(i=new o(n,e),c(i,"add")),t.set(n,i),g(),i}function w(n){return t.get(n)}function I(n){var e=w(n);if(!e)return!1;p();var i=e.links;return i&&(i.forEach(E),e.links=null),t.delete(n),c(e,"remove"),g(),!0}function m(){return t.size}function P(){return e.size}function E(n){if(!n)return!1;if(!e.get(n.id))return!1;p(),e.delete(n.id);var t=w(n.fromId),i=w(n.toId);return t&&t.links.delete(n),i&&i.links.delete(n),l(n,"remove"),g(),!0}function M(n,t){if(void 0!==n&&void 0!==t)return e.get(a(n,t))}function _(){}function b(){f+=1}function O(){0===(f-=1)&&h.length>0&&(y.fire("changed",h),h.length=0)}function L(n){if("function"!=typeof n)throw new Error("Function is expected to iterate over graph nodes. You passed "+n);for(var e=t.values(),i=e.next();!i.done;){if(n(i.value))return!0;i=e.next()}}},i=t;function o(n,t){this.id=n,this.links=null,this.data=t}function r(n,t){n.links?n.links.add(t):n.links=new Set([t])}function s(n,t,e,i){this.fromId=n,this.toId=t,this.data=e,this.id=i}function a(n,t){return n.toString()+"ðŸ‘‰ "+t.toString()}var u=n(e),f=function(n){"uniqueLinkId"in(n=n||{})&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n","\n","Note: there is also change in default behavior: From now on each graph\nis considered to be not a multigraph by default (each edge is unique)."),n.multigraph=n.uniqueLinkId);void 0===n.multigraph&&(n.multigraph=!1);if("function"!=typeof Map)throw new Error("ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph");var t=new Map,e=[],i={},o=0,r=n.multigraph?function(n,t,e){var o=g(n,t),r=i.hasOwnProperty(o);if(r||_(n,t)){r||(i[o]=0);var s="@"+ ++i[o];o=g(n+s,t+s)}return new p(n,t,e,o)}:function(n,t,e){var i=g(n,t);return new p(n,t,e,i)},s=[],a=b,u=b,f=b,y=b,v={addNode:w,addLink:function(n,t,i){f();var o=I(n)||w(n),s=I(t)||w(t),u=r(n,t,i);e.push(u),c(o,u),n!==t&&c(s,u);return a(u,"add"),y(),u},removeLink:M,removeNode:m,getNode:I,getNodeCount:P,getLinkCount:E,getLinksCount:E,getNodesCount:P,getLinks:function(n){var t=I(n);return t?t.links:null},forEachNode:N,forEachLinkedNode:function(n,e,i){var o=I(n);if(o&&o.links&&"function"==typeof e)return i?function(n,e,i){for(var o=0;o<n.length;++o){var r=n[o];if(r.fromId===e&&i(t.get(r.toId),r))return!0}}(o.links,n,e):function(n,e,i){for(var o=0;o<n.length;++o){var r=n[o],s=r.fromId===e?r.toId:r.fromId;if(i(t.get(s),r))return!0}}(o.links,n,e)},forEachLink:function(n){var t,i;if("function"==typeof n)for(t=0,i=e.length;t<i;++t)n(e[t])},beginUpdate:f,endUpdate:y,clear:function(){f(),N((function(n){m(n.id)})),y()},hasLink:_,hasNode:I,getLink:_};return d(v),function(){var n=v.on;function t(){return v.beginUpdate=f=O,v.endUpdate=y=L,a=k,u=x,v.on=n,n.apply(v,arguments)}v.on=t}(),v;function k(n,t){s.push({link:n,changeType:t})}function x(n,t){s.push({node:n,changeType:t})}function w(n,e){if(void 0===n)throw new Error("Invalid node identifier");f();var i=I(n);return i?(i.data=e,u(i,"update")):(i=new l(n,e),u(i,"add")),t.set(n,i),y(),i}function I(n){return t.get(n)}function m(n){var e=I(n);if(!e)return!1;f();var i=e.links;if(i){e.links=null;for(var o=0;o<i.length;++o)M(i[o])}return t.delete(n),u(e,"remove"),y(),!0}function P(){return t.size}function E(){return e.length}function M(n){if(!n)return!1;var t=h(n,e);if(t<0)return!1;f(),e.splice(t,1);var i=I(n.fromId),o=I(n.toId);return i&&(t=h(n,i.links))>=0&&i.links.splice(t,1),o&&(t=h(n,o.links))>=0&&o.links.splice(t,1),a(n,"remove"),y(),!0}function _(n,t){var e,i=I(n);if(!i||!i.links)return null;for(e=0;e<i.links.length;++e){var o=i.links[e];if(o.fromId===n&&o.toId===t)return o}return null}function b(){}function O(){o+=1}function L(){0===(o-=1)&&s.length>0&&(v.fire("changed",s),s.length=0)}function N(n){if("function"!=typeof n)throw new Error("Function is expected to iterate over graph nodes. You passed "+n);for(var e=t.values(),i=e.next();!i.done;){if(n(i.value))return!0;i=e.next()}}},d=t;function h(n,t){if(!t)return-1;if(t.indexOf)return t.indexOf(n);var e,i=t.length;for(e=0;e<i;e+=1)if(t[e]===n)return e;return-1}function l(n,t){this.id=n,this.links=null,this.data=t}function c(n,t){n.links?n.links.push(t):n.links=[t]}function p(n,t,e,i){this.fromId=n,this.toId=t,this.data=e,this.id=i}function g(n,t){return n.toString()+"ðŸ‘‰ "+t.toString()}var y=function(n,t,e){var i;t=t||k,e=e||k,i="string"==typeof n?JSON.parse(n):n;var o,r=v();if(void 0===i.links||void 0===i.nodes)throw new Error("Cannot load graph without links and nodes");for(o=0;o<i.nodes.length;++o){var s=t(i.nodes[o]);if(!s.hasOwnProperty("id"))throw new Error("Graph node format is invalid: Node id is missing");r.addNode(s.id,s.data)}for(o=0;o<i.links.length;++o){var a=e(i.links[o]);if(!a.hasOwnProperty("fromId")||!a.hasOwnProperty("toId"))throw new Error("Graph link format is invalid. Both fromId and toId are required");r.addLink(a.fromId,a.toId,a.data)}return r},v=f;function k(n){return n}var x=n(y);var w=n((function(n,t,e){var i={nodes:[],links:[]},o=t||function(n){var t={id:n.id};void 0!==n.data&&(t.data=n.data);return t},r=e||function(n){var t={fromId:n.fromId,toId:n.toId};void 0!==n.data&&(t.data=n.data);return t};return n.forEachNode((function(n){i.nodes.push(JSON.stringify(o(n)))})),n.forEachLink((function(n){i.links.push(JSON.stringify(r(n)))})),'{"nodes": ['+i.nodes.join(",")+'], "links": ['+i.links.join(",")+"]}"}));class I{constructor(){this.keys=[]}findKeyPosition(n,t){let e=0,i=this.keys.length;for(;e<i;){const t=Math.floor((e+i)/2);n.isLessThanOtherEdgeKey(this.keys[t])?i=t:e=t+1}return e}addKey(n,t){const e=this.findKeyPosition(n);this.keys.splice(e,0,n)}}let m=0;class P{constructor(n,t){this.x=n[0],this.y=n[1],this.nodeId=m,this.polygonID=t,this.edges=[],this.prevPoint=null,this.nextPoint=null,m++}isPointEqual(n){return null!==n&&(this.x===n.x&&this.y===n.y)}angleToPoint(n){if(this.isPointEqual(n))return 0;const t=n.x-this.x,e=n.y-this.y;return 0===t?e<0?U:F:0===e?t<0?Math.PI:0:t<0?Math.PI+Math.atan(e/t):e<0?2*Math.PI+Math.atan(e/t):Math.atan(e/t)}}const E=11102230246251565e-32,M=134217729,_=(3+8*E)*E;function b(n,t,e,i,o){let r,s,a,u,f=t[0],d=i[0],h=0,l=0;d>f==d>-f?(r=f,f=t[++h]):(r=d,d=i[++l]);let c=0;if(h<n&&l<e)for(d>f==d>-f?(s=f+r,a=r-(s-f),f=t[++h]):(s=d+r,a=r-(s-d),d=i[++l]),r=s,0!==a&&(o[c++]=a);h<n&&l<e;)d>f==d>-f?(s=r+f,u=s-r,a=r-(s-u)+(f-u),f=t[++h]):(s=r+d,u=s-r,a=r-(s-u)+(d-u),d=i[++l]),r=s,0!==a&&(o[c++]=a);for(;h<n;)s=r+f,u=s-r,a=r-(s-u)+(f-u),f=t[++h],r=s,0!==a&&(o[c++]=a);for(;l<e;)s=r+d,u=s-r,a=r-(s-u)+(d-u),d=i[++l],r=s,0!==a&&(o[c++]=a);return 0===r&&0!==c||(o[c++]=r),c}function O(n){return new Float64Array(n)}const L=33306690738754716e-32,N=22204460492503146e-32,q=11093356479670487e-47,T=O(4),j=O(8),S=O(12),D=O(16),K=O(4);function C(n,t,e,i,o,r){const s=(t-r)*(e-o),a=(n-o)*(i-r),u=s-a;if(0===s||0===a||s>0!=a>0)return u;const f=Math.abs(s+a);return Math.abs(u)>=L*f?u:-function(n,t,e,i,o,r,s){let a,u,f,d,h,l,c,p,g,y,v,k,x,w,I,m,P,E;const O=n-o,L=e-o,C=t-r,U=i-r;w=O*U,l=M*O,c=l-(l-O),p=O-c,l=M*U,g=l-(l-U),y=U-g,I=p*y-(w-c*g-p*g-c*y),m=C*L,l=M*C,c=l-(l-C),p=C-c,l=M*L,g=l-(l-L),y=L-g,P=p*y-(m-c*g-p*g-c*y),v=I-P,h=I-v,T[0]=I-(v+h)+(h-P),k=w+v,h=k-w,x=w-(k-h)+(v-h),v=x-m,h=x-v,T[1]=x-(v+h)+(h-m),E=k+v,h=E-k,T[2]=k-(E-h)+(v-h),T[3]=E;let F=function(n,t){let e=t[0];for(let i=1;i<n;i++)e+=t[i];return e}(4,T),G=N*s;if(F>=G||-F>=G)return F;if(h=n-O,a=n-(O+h)+(h-o),h=e-L,f=e-(L+h)+(h-o),h=t-C,u=t-(C+h)+(h-r),h=i-U,d=i-(U+h)+(h-r),0===a&&0===u&&0===f&&0===d)return F;if(G=q*s+_*Math.abs(F),F+=O*d+U*a-(C*f+L*u),F>=G||-F>=G)return F;w=a*U,l=M*a,c=l-(l-a),p=a-c,l=M*U,g=l-(l-U),y=U-g,I=p*y-(w-c*g-p*g-c*y),m=u*L,l=M*u,c=l-(l-u),p=u-c,l=M*L,g=l-(l-L),y=L-g,P=p*y-(m-c*g-p*g-c*y),v=I-P,h=I-v,K[0]=I-(v+h)+(h-P),k=w+v,h=k-w,x=w-(k-h)+(v-h),v=x-m,h=x-v,K[1]=x-(v+h)+(h-m),E=k+v,h=E-k,K[2]=k-(E-h)+(v-h),K[3]=E;const J=b(4,T,4,K,j);w=O*d,l=M*O,c=l-(l-O),p=O-c,l=M*d,g=l-(l-d),y=d-g,I=p*y-(w-c*g-p*g-c*y),m=C*f,l=M*C,c=l-(l-C),p=C-c,l=M*f,g=l-(l-f),y=f-g,P=p*y-(m-c*g-p*g-c*y),v=I-P,h=I-v,K[0]=I-(v+h)+(h-P),k=w+v,h=k-w,x=w-(k-h)+(v-h),v=x-m,h=x-v,K[1]=x-(v+h)+(h-m),E=k+v,h=E-k,K[2]=k-(E-h)+(v-h),K[3]=E;const z=b(J,j,4,K,S);w=a*d,l=M*a,c=l-(l-a),p=a-c,l=M*d,g=l-(l-d),y=d-g,I=p*y-(w-c*g-p*g-c*y),m=u*f,l=M*u,c=l-(l-u),p=u-c,l=M*f,g=l-(l-f),y=f-g,P=p*y-(m-c*g-p*g-c*y),v=I-P,h=I-v,K[0]=I-(v+h)+(h-P),k=w+v,h=k-w,x=w-(k-h)+(v-h),v=x-m,h=x-v,K[1]=x-(v+h)+(h-m),E=k+v,h=E-k,K[2]=k-(E-h)+(v-h),K[3]=E;const A=b(z,S,4,K,D);return D[A-1]}(n,t,e,i,o,r,f)}const U=3*Math.PI/2,F=Math.PI/2;function G(n,t,e){const i=e.p1,o=e.p2,r=J(n,t,i),s=J(n,t,o),a=J(i,o,n),u=J(i,o,t);if(r!==s&&a!==u)return!0;if(0===r){if(z(n,i,t))return!0;if(z(n,o,t))return!0;if(z(i,n,o))return!0;if(z(i,t,o))return!0}return!1}function J(n,t,e){const i=C(e.x,e.y,t.x,t.y,n.x,n.y);return i>0?1:i<0?-1:0}function z(n,t,e){return t.x<=Math.max(n.x,e.x)&&t.x>=Math.min(n.x,e.x)&&t.y<=Math.max(n.y,e.y)&&t.y>=Math.min(n.y,e.y)}const A=Math.pow(10,10),B=Math.pow(10,10);function Y(n,t,e){const i=Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2),o=Math.pow(e.x-n.x,2)+Math.pow(e.y-n.y,2),r=Math.pow(t.x-n.x,2)+Math.pow(t.y-n.y,2),s=(i+r-o)/(2*Math.sqrt(i)*Math.sqrt(r));return Math.acos(parseInt(s*A)/B)}function H(n,t,e){const i=function(n,t,e){if(e.containsPoint(n))return n;if(e.containsPoint(t))return t;if(e.p1.x===e.p2.x){if(n.x===t.x)return null;const i=(n.y-t.y)/(n.x-t.x),o=e.p1.x,r=i*(o-n.x)+n.y;return new P([o,r],-1)}if(n.x===t.x){const t=(e.p1.y-e.p2.y)/(e.p1.x-e.p2.x),i=n.x,o=t*(i-e.p1.x)+e.p1.y;return new P([i,o],-1)}const i=(n.y-t.y)/(n.x-t.x),o=(e.p1.y-e.p2.y)/(e.p1.x-e.p2.x);if(i===o)return null;const r=(o*e.p1.x-i*n.x+n.y-e.p1.y)/(o-i),s=o*(r-e.p1.x)+e.p1.y;return new P([r,s],-1)}(n,t,e);return null!==i?Q(n,i):0}function Q(n,t){return Math.sqrt(Math.pow(t.x-n.x,2)+Math.pow(t.y-n.y,2))}class R{constructor(n,t,e){this.p1=n,this.p2=t,this.edge=e}isLessThanOtherEdgeKey(n){if(this.matchesOtherKey(n))return!1;if(!G(this.p1,this.p2,n.edge))return!0;const t=H(this.p1,this.p2,this.edge),e=H(this.p1,this.p2,n.edge);if(t>e)return!1;if(t<e)return!0;if(t===e){let t=null;t=n.edge.containsPoint(this.edge.p1)?this.edge.p1:this.edge.p2;return Y(this.p1,this.p2,this.edge.getOtherPointInEdge(t))<Y(this.p1,this.p2,n.edge.getOtherPointInEdge(t))}}matchesOtherKey(n){return this.edge.areEdgesEqual(n.edge)}}const V=1;function W(n){!function(n){const t=n._points,e=t.length,i=V;for(var o=0;o<e;o++){Z(t[o],e,i,n)}}(n)}function X(n,t){Z(t,n._points.length,0,n)}function Z(n,t,e,i){const o=i._clonedPoints,r=i._edges,s=i._polygons,a=i.graph,u=n.prevPoint,f=n.nextPoint;!function(n,t){t.sort(((t,e)=>{const i=n.angleToPoint(t),o=n.angleToPoint(e);if(i<o)return-1;if(i>o)return 1;const r=Q(n,t),s=Q(n,e);return r<s?-1:r>s?1:0}))}(n,o);const d=new I,h=new P([1/0,n.y],-1);for(let e=0;e<t;e++){const t=r[e];if(!t.containsPoint(n)&&G(n,h,t)){if(z(n,t.p1,h)||z(n,t.p2,h))continue;d.addKey(new R(n,h,t))}}d.keys.length>100&&console.log(d.keys.length);const l=[];let c=null,p=null;for(let i=0;i<t;i++){const t=o[i];if(t.isPointEqual(n))continue;if(e===V&&n.angleToPoint(t)>Math.PI)break;if(d.keys.length>0)for(let e=0;e<t.edges.length;e++){const i=t.edges[e];if(-1===J(n,t,i.getOtherPointInEdge(t))){const e=new R(n,t,i),o=d.findKeyPosition(e)-1;-1!==o&&d.keys[o].matchesOtherKey(e)&&d.keys.splice(o,1)}}d.keys.length>100&&console.log(d.keys.length);let r=!1;if(null!==c&&0===J(n,c,t)&&z(n,c,t))if(p){r=!0;for(let n=0;n<d.keys.length;n++){const e=d.keys[n];if(!e.edge.containsPoint(c)&&G(c,t,e.edge)){r=!1;break}}r&&$(c,t,s)&&(r=!1)}else r=!1;else 0===d.keys.length?r=!0:G(n,t,d.keys[0].edge)||(r=!0);const a=t.isPointEqual(u)||t.isPointEqual(f);r&&!a&&(r=!$(n,t,s)),r&&l.push(t);for(let e=0;e<t.edges.length;e++){const i=t.edges[e];if(!i.containsPoint(n)&&1===J(n,t,i.getOtherPointInEdge(t))){const e=new R(n,t,i);d.addKey(e)}}c=t,p=r}const g=n.nodeId;a.addNode(g,{x:n.x,y:n.y});for(var y=0;y<l.length;y++){const n=l[y].nodeId;a.addNode(n,{x:l[y].x,y:l[y].y}),a.addLink(g,n)}}function $(n,t,e){if(n.polygonID!==t.polygonID)return!1;if(-1===n.polygonID||-1===t.polygonID)return!1;return function(n,t){const e=new P([1/0,n.y],-1);let i=0,o=!1,r=0;for(let s=0;s<t.length;s++){const a=t[s];if(n.y<a.p1.y&&n.y<a.p2.y)continue;if(n.y>a.p1.y&&n.y>a.p2.y)continue;const u=0===J(n,a.p1,e)&&a.p1.x>n.x,f=0===J(n,a.p2,e)&&a.p2.x>n.x,d=u?a.p1:a.p2;u||f?(r=a.getOtherPointInEdge(d).y>n.y?r++:r--,o?(0===r&&i++,o=!1,r=0):o=!0):G(n,e,a)&&i++}return i%2!=0}(new P([(n.x+t.x)/2,(n.y+t.y)/2],-1),e[n.polygonID].edges)}class nn{constructor(){this.edges=[],this.bbox=[1/0,1/0,-1/0,-1/0]}}class tn{constructor(n,t){this.p1=n,this.p2=t,n.edges.push(this),t.edges.push(this)}getOtherPointInEdge(n){return this.p1.isPointEqual(n)?this.p2:this.p1}areEdgesEqual(n){return!(!this.p1.isPointEqual(n.p1)||!this.p2.isPointEqual(n.p2))||!(!this.p1.isPointEqual(n.p2)||!this.p2.isPointEqual(n.p1))}containsPoint(n){return this.p1.isPointEqual(n)||this.p2.isPointEqual(n)}}function en(n,t){t[0]=Math.min(t[0],n.x),t[1]=Math.min(t[1],n.y),t[2]=Math.max(t[2],n.x),t[3]=Math.max(t[3],n.y)}function on(n,t,e){t.prevPoint=n,t.nextPoint=e}return class{constructor(n,t){this._geojson=n,this.graph=null,this._points=[],this._clonedPoints=[],this._edges=[],this._polygons=[],this._lastOrigin=null,this._lastDestination=null,function(n){const t="Feature"===n._geojson.type?n._geojson.geometry:n._geojson;let e=t.coordinates;"Polygon"===t.type&&(e=[e]);for(let t=0;t<e.length;t++){const i=new nn,o=i.edges,r=i.bbox;n._polygons.push(i);for(let i=0;i<e[t].length;i++){let s=new P(e[t][i][0],t),a=new P(e[t][i][1],t);en(s,r),en(a,r),s.nextPoint=a;let u=new P(e[t][i][2],t);on(s,a,u),n._points.push(s);let f=new tn(s,a);n._edges.push(f),o.push(f);const d=s;s=a,a=u;for(let d=2;d<e[t][i].length-2;d++){n._points.push(s),u=new P(e[t][i][d+1],t),en(u,r),on(s,a,u);const h=new tn(s,a);n._edges.push(h),o.push(h),s=a,a=u,f=h}on(s,a,d);const h=new tn(f.p2,a);n._edges.push(h),o.push(h);const l=new tn(a,d);on(a,d,d.nextPoint),n._edges.push(l),o.push(l),n._points.push(s),n._points.push(u)}}n._clonedPoints=n._points.slice(0)}(this),t?this.graph=x(t):(this.graph=u(),W(this))}getNodeIdByLatLon(n){for(var t=0;t<this._points.length;t++)if(this._points[t].x===n[0]&&this._points[t].y===n[1])return this._points[t].nodeId;return null}saveGraphToJson(){return w(this.graph)}addStartAndEndPointsToGraph(n,t){return null!==this._lastOrigin&&(this.graph.removeNode(this._lastOrigin.nodeId),this.graph.removeNode(this._lastDestination.nodeId)),this._lastOrigin=new P(n.geometry.coordinates,-1),this._lastDestination=new P(t.geometry.coordinates,-1),X(this,this._lastOrigin),X(this,this._lastDestination),{startNode:this._lastOrigin,endNode:this._lastDestination}}}}));
