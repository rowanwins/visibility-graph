!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n="undefined"!=typeof globalThis?globalThis:n||self).visibilityGraph=t()}(this,(function(){"use strict";var n=function(n){!function(n){if(!n)throw new Error("Eventify cannot use falsy object as events subject");for(var t=["on","fire","off"],e=0;e<t.length;++e)if(n.hasOwnProperty(t[e]))throw new Error("Subject cannot be eventified, since it already has property '"+t[e]+"'")}(n);var t=function(n){var t=Object.create(null);return{on:function(e,i,o){if("function"!=typeof i)throw new Error("callback is expected to be a function");var r=t[e];return r||(r=t[e]=[]),r.push({callback:i,ctx:o}),n},off:function(e,i){if(void 0===e)return t=Object.create(null),n;if(t[e])if("function"!=typeof i)delete t[e];else for(var o=t[e],r=0;r<o.length;++r)o[r].callback===i&&o.splice(r,1);return n},fire:function(e){var i,o=t[e];if(!o)return n;arguments.length>1&&(i=Array.prototype.splice.call(arguments,1));for(var r=0;r<o.length;++r){var s=o[r];s.callback.apply(s.ctx,i)}return n}}}(n);return n.on=t.on,n.off=t.off,n.fire=t.fire,n};var t=function(n){"uniqueLinkId"in(n=n||{})&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n","\n","Note: there is also change in default behavior: From now on each graph\nis considered to be not a multigraph by default (each edge is unique)."),n.multigraph=n.uniqueLinkId);void 0===n.multigraph&&(n.multigraph=!1);var t="function"==typeof Object.create?Object.create(null):{},u=[],f={},h=0,l=0,c=Object.keys?N:q,d=n.multigraph?function(n,t,e){var i=a(n,t),o=f.hasOwnProperty(i);if(o||O(n,t)){o||(f[i]=0);var r="@"+ ++f[i];i=a(n+r,t+r)}return new s(n,t,e,i)}:function(n,t,e){var i=a(n,t);return new s(n,t,e,i)},p=[],g=_,y=_,v=_,k=_,x={addNode:m,addLink:function(n,t,e){v();var i=P(n)||m(n),o=P(t)||m(t),s=d(n,t,e);u.push(s),r(i,s),n!==t&&r(o,s);return g(s,"add"),k(),s},removeLink:E,removeNode:b,getNode:P,getNodesCount:function(){return h},getLinksCount:function(){return u.length},getLinks:function(n){var t=P(n);return t?t.links:null},forEachNode:c,forEachLinkedNode:function(n,e,i){var o=P(n);if(o&&o.links&&"function"==typeof e)return i?function(n,e,i){for(var o=0;o<n.length;++o){var r=n[o];if(r.fromId===e&&i(t[r.toId],r))return!0}}(o.links,n,e):function(n,e,i){for(var o=0;o<n.length;++o){var r=n[o],s=r.fromId===e?r.toId:r.fromId;if(i(t[s],r))return!0}}(o.links,n,e)},forEachLink:function(n){var t,e;if("function"==typeof n)for(t=0,e=u.length;t<e;++t)n(u[t])},beginUpdate:v,endUpdate:k,clear:function(){v(),c((function(n){b(n.id)})),k()},hasLink:O,hasNode:P,getLink:O};return e(x),function(){var n=x.on;function t(){return x.beginUpdate=v=M,x.endUpdate=k=L,g=w,y=I,x.on=n,n.apply(x,arguments)}x.on=t}(),x;function w(n,t){p.push({link:n,changeType:t})}function I(n,t){p.push({node:n,changeType:t})}function m(n,e){if(void 0===n)throw new Error("Invalid node identifier");v();var i=P(n);return i?(i.data=e,y(i,"update")):(i=new o(n,e),h++,y(i,"add")),t[n]=i,k(),i}function P(n){return t[n]}function b(n){var e=P(n);if(!e)return!1;v();var i=e.links;if(i){e.links=null;for(var o=0;o<i.length;++o)E(i[o])}return delete t[n],h--,y(e,"remove"),k(),!0}function E(n){if(!n)return!1;var t=i(n,u);if(t<0)return!1;v(),u.splice(t,1);var e=P(n.fromId),o=P(n.toId);return e&&(t=i(n,e.links))>=0&&e.links.splice(t,1),o&&(t=i(n,o.links))>=0&&o.links.splice(t,1),g(n,"remove"),k(),!0}function O(n,t){var e,i=P(n);if(!i||!i.links)return null;for(e=0;e<i.links.length;++e){var o=i.links[e];if(o.fromId===n&&o.toId===t)return o}return null}function _(){}function M(){l+=1}function L(){0===(l-=1)&&p.length>0&&(x.fire("changed",p),p.length=0)}function N(n){if("function"==typeof n)for(var e=Object.keys(t),i=0;i<e.length;++i)if(n(t[e[i]]))return!0}function q(n){var e;if("function"==typeof n)for(e in t)if(n(t[e]))return!0}},e=n;function i(n,t){if(!t)return-1;if(t.indexOf)return t.indexOf(n);var e,i=t.length;for(e=0;e<i;e+=1)if(t[e]===n)return e;return-1}function o(n,t){this.id=n,this.links=null,this.data=t}function r(n,t){n.links?n.links.push(t):n.links=[t]}function s(n,t,e,i){this.fromId=n,this.toId=t,this.data=e,this.id=i}function a(n,t){return n.toString()+"ðŸ‘‰ "+t.toString()}var u=function(n){"uniqueLinkId"in(n=n||{})&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n","\n","Note: there is also change in default behavior: From now own each graph\nis considered to be not a multigraph by default (each edge is unique)."),n.multigraph=n.uniqueLinkId);void 0===n.multigraph&&(n.multigraph=!1);var t="function"==typeof Object.create?Object.create(null):{},e=[],i={},o=0,r=0,s=Object.keys?N:q,a=n.multigraph?function(n,t,e){var o=p(n,t),r=i.hasOwnProperty(o);if(r||O(n,t)){r||(i[o]=0);var s="@"+ ++i[o];o=p(n+s,t+s)}return new d(n,t,e,o)}:function(n,t,e){var i=p(n,t);return new d(n,t,e,i)},u=[],g=_,y=_,v=_,k=_,x={addNode:m,addLink:function(n,t,i){v();var o=P(n)||m(n),r=P(t)||m(t),s=a(n,t,i);e.push(s),c(o,s),n!==t&&c(r,s);return g(s,"add"),k(),s},removeLink:E,removeNode:b,getNode:P,getNodesCount:function(){return o},getLinksCount:function(){return e.length},getLinks:function(n){var t=P(n);return t?t.links:null},forEachNode:s,forEachLinkedNode:function(n,e,i){var o=P(n);if(o&&o.links&&"function"==typeof e)return i?function(n,e,i){for(var o=0;o<n.length;++o){var r=n[o];if(r.fromId===e&&i(t[r.toId],r))return!0}}(o.links,n,e):function(n,e,i){for(var o=0;o<n.length;++o){var r=n[o],s=r.fromId===e?r.toId:r.fromId;if(i(t[s],r))return!0}}(o.links,n,e)},forEachLink:function(n){var t,i;if("function"==typeof n)for(t=0,i=e.length;t<i;++t)n(e[t])},beginUpdate:v,endUpdate:k,clear:function(){v(),s((function(n){b(n.id)})),k()},hasLink:O,hasNode:P,getLink:O};return f(x),function(){var n=x.on;function t(){return x.beginUpdate=v=M,x.endUpdate=k=L,g=w,y=I,x.on=n,n.apply(x,arguments)}x.on=t}(),x;function w(n,t){u.push({link:n,changeType:t})}function I(n,t){u.push({node:n,changeType:t})}function m(n,e){if(void 0===n)throw new Error("Invalid node identifier");v();var i=P(n);return i?(i.data=e,y(i,"update")):(i=new l(n,e),o++,y(i,"add")),t[n]=i,k(),i}function P(n){return t[n]}function b(n){var e=P(n);if(!e)return!1;v();var i=e.links;if(i){e.links=null;for(var r=0;r<i.length;++r)E(i[r])}return delete t[n],o--,y(e,"remove"),k(),!0}function E(n){if(!n)return!1;var t=h(n,e);if(t<0)return!1;v(),e.splice(t,1);var i=P(n.fromId),o=P(n.toId);return i&&(t=h(n,i.links))>=0&&i.links.splice(t,1),o&&(t=h(n,o.links))>=0&&o.links.splice(t,1),g(n,"remove"),k(),!0}function O(n,t){var e,i=P(n);if(!i||!i.links)return null;for(e=0;e<i.links.length;++e){var o=i.links[e];if(o.fromId===n&&o.toId===t)return o}return null}function _(){}function M(){r+=1}function L(){0===(r-=1)&&u.length>0&&(x.fire("changed",u),u.length=0)}function N(n){if("function"==typeof n)for(var e=Object.keys(t),i=0;i<e.length;++i)if(n(t[e[i]]))return!0}function q(n){var e;if("function"==typeof n)for(e in t)if(n(t[e]))return!0}},f=n;function h(n,t){if(!t)return-1;if(t.indexOf)return t.indexOf(n);var e,i=t.length;for(e=0;e<i;e+=1)if(t[e]===n)return e;return-1}function l(n,t){this.id=n,this.links=null,this.data=t}function c(n,t){n.links?n.links.push(t):n.links=[t]}function d(n,t,e,i){this.fromId=n,this.toId=t,this.data=e,this.id=i}function p(n,t){return n.toString()+"ðŸ‘‰ "+t.toString()}var g=function(n,t,e){var i;t=t||v,e=e||v,i="string"==typeof n?JSON.parse(n):n;var o,r=y();if(void 0===i.links||void 0===i.nodes)throw new Error("Cannot load graph without links and nodes");for(o=0;o<i.nodes.length;++o){var s=t(i.nodes[o]);if(!s.hasOwnProperty("id"))throw new Error("Graph node format is invalid: Node id is missing");r.addNode(s.id,s.data)}for(o=0;o<i.links.length;++o){var a=e(i.links[o]);if(!a.hasOwnProperty("fromId")||!a.hasOwnProperty("toId"))throw new Error("Graph link format is invalid. Both fromId and toId are required");r.addLink(a.fromId,a.toId,a.data)}return r},y=u;function v(n){return n}var k=function(n,t,e){var i={nodes:[],links:[]},o=t||function(n){var t={id:n.id};void 0!==n.data&&(t.data=n.data);return t},r=e||function(n){var t={fromId:n.fromId,toId:n.toId};void 0!==n.data&&(t.data=n.data);return t};return n.forEachNode((function(n){i.nodes.push(o(n))})),n.forEachLink((function(n){i.links.push(r(n))})),JSON.stringify(i)};class x{constructor(){this.keys=[]}findKeyPosition(n,t){let e=0,i=this.keys.length;for(;e<i;){const t=Math.floor((e+i)/2);n.isLessThanOtherEdgeKey(this.keys[t])?i=t:e=t+1}return e}addKey(n,t){const e=this.findKeyPosition(n);this.keys.splice(e,0,n)}}let w=0;class I{constructor(n,t){this.x=n[0],this.y=n[1],this.nodeId=w,this.polygonID=t,this.edges=[],this.prevPoint=null,this.nextPoint=null,w++}isPointEqual(n){return null!==n&&(this.x===n.x&&this.y===n.y)}angleToPoint(n){if(this.isPointEqual(n))return 0;const t=n.x-this.x,e=n.y-this.y;return 0===t?e<0?q:j:0===e?t<0?Math.PI:0:t<0?Math.PI+Math.atan(e/t):e<0?2*Math.PI+Math.atan(e/t):Math.atan(e/t)}}const m=134217729;function P(n,t,e,i,o){let r,s,a,u,f=t[0],h=i[0],l=0,c=0;h>f==h>-f?(r=f,f=t[++l]):(r=h,h=i[++c]);let d=0;if(l<n&&c<e)for(h>f==h>-f?(s=f+r,a=r-(s-f),f=t[++l]):(s=h+r,a=r-(s-h),h=i[++c]),r=s,0!==a&&(o[d++]=a);l<n&&c<e;)h>f==h>-f?(s=r+f,u=s-r,a=r-(s-u)+(f-u),f=t[++l]):(s=r+h,u=s-r,a=r-(s-u)+(h-u),h=i[++c]),r=s,0!==a&&(o[d++]=a);for(;l<n;)s=r+f,u=s-r,a=r-(s-u)+(f-u),f=t[++l],r=s,0!==a&&(o[d++]=a);for(;c<e;)s=r+h,u=s-r,a=r-(s-u)+(h-u),h=i[++c],r=s,0!==a&&(o[d++]=a);return 0===r&&0!==d||(o[d++]=r),d}function b(n){return new Float64Array(n)}const E=b(4),O=b(8),_=b(12),M=b(16),L=b(4);function N(n,t,e,i,o,r){const s=(t-r)*(e-o),a=(n-o)*(i-r),u=s-a;if(0===s||0===a||s>0!=a>0)return u;const f=Math.abs(s+a);return Math.abs(u)>=33306690738754716e-32*f?u:-function(n,t,e,i,o,r,s){let a,u,f,h,l,c,d,p,g,y,v,k,x,w,I,b,N,q;const j=n-o,T=e-o,D=t-r,K=i-r;w=j*K,c=m*j,d=c-(c-j),p=j-d,c=m*K,g=c-(c-K),y=K-g,I=p*y-(w-d*g-p*g-d*y),b=D*T,c=m*D,d=c-(c-D),p=D-d,c=m*T,g=c-(c-T),y=T-g,N=p*y-(b-d*g-p*g-d*y),v=I-N,l=I-v,E[0]=I-(v+l)+(l-N),k=w+v,l=k-w,x=w-(k-l)+(v-l),v=x-b,l=x-v,E[1]=x-(v+l)+(l-b),q=k+v,l=q-k,E[2]=k-(q-l)+(v-l),E[3]=q;let S=function(n,t){let e=t[0];for(let i=1;i<n;i++)e+=t[i];return e}(4,E),U=22204460492503146e-32*s;if(S>=U||-S>=U)return S;if(l=n-j,a=n-(j+l)+(l-o),l=e-T,f=e-(T+l)+(l-o),l=t-D,u=t-(D+l)+(l-r),l=i-K,h=i-(K+l)+(l-r),0===a&&0===u&&0===f&&0===h)return S;if(U=11093356479670487e-47*s+33306690738754706e-32*Math.abs(S),S+=j*h+K*a-(D*f+T*u),S>=U||-S>=U)return S;w=a*K,c=m*a,d=c-(c-a),p=a-d,c=m*K,g=c-(c-K),y=K-g,I=p*y-(w-d*g-p*g-d*y),b=u*T,c=m*u,d=c-(c-u),p=u-d,c=m*T,g=c-(c-T),y=T-g,N=p*y-(b-d*g-p*g-d*y),v=I-N,l=I-v,L[0]=I-(v+l)+(l-N),k=w+v,l=k-w,x=w-(k-l)+(v-l),v=x-b,l=x-v,L[1]=x-(v+l)+(l-b),q=k+v,l=q-k,L[2]=k-(q-l)+(v-l),L[3]=q;const C=P(4,E,4,L,O);w=j*h,c=m*j,d=c-(c-j),p=j-d,c=m*h,g=c-(c-h),y=h-g,I=p*y-(w-d*g-p*g-d*y),b=D*f,c=m*D,d=c-(c-D),p=D-d,c=m*f,g=c-(c-f),y=f-g,N=p*y-(b-d*g-p*g-d*y),v=I-N,l=I-v,L[0]=I-(v+l)+(l-N),k=w+v,l=k-w,x=w-(k-l)+(v-l),v=x-b,l=x-v,L[1]=x-(v+l)+(l-b),q=k+v,l=q-k,L[2]=k-(q-l)+(v-l),L[3]=q;const G=P(C,O,4,L,_);w=a*h,c=m*a,d=c-(c-a),p=a-d,c=m*h,g=c-(c-h),y=h-g,I=p*y-(w-d*g-p*g-d*y),b=u*f,c=m*u,d=c-(c-u),p=u-d,c=m*f,g=c-(c-f),y=f-g,N=p*y-(b-d*g-p*g-d*y),v=I-N,l=I-v,L[0]=I-(v+l)+(l-N),k=w+v,l=k-w,x=w-(k-l)+(v-l),v=x-b,l=x-v,L[1]=x-(v+l)+(l-b),q=k+v,l=q-k,L[2]=k-(q-l)+(v-l),L[3]=q;const F=P(G,_,4,L,M);return M[F-1]}(n,t,e,i,o,r,f)}const q=3*Math.PI/2,j=Math.PI/2;function T(n,t,e){const i=e.p1,o=e.p2,r=D(n,t,i),s=D(n,t,o),a=D(i,o,n),u=D(i,o,t);if(r!==s&&a!==u)return!0;if(0===r){if(K(n,i,t))return!0;if(K(n,o,t))return!0;if(K(i,n,o))return!0;if(K(i,t,o))return!0}return!1}function D(n,t,e){const i=N(e.x,e.y,t.x,t.y,n.x,n.y);return i>0?1:i<0?-1:0}function K(n,t,e){return t.x<=Math.max(n.x,e.x)&&t.x>=Math.min(n.x,e.x)&&t.y<=Math.max(n.y,e.y)&&t.y>=Math.min(n.y,e.y)}const S=Math.pow(10,10),U=Math.pow(10,10);function C(n,t,e){const i=Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2),o=Math.pow(e.x-n.x,2)+Math.pow(e.y-n.y,2),r=Math.pow(t.x-n.x,2)+Math.pow(t.y-n.y,2),s=(i+r-o)/(2*Math.sqrt(i)*Math.sqrt(r));return Math.acos(parseInt(s*S)/U)}function G(n,t,e){const i=function(n,t,e){if(e.containsPoint(n))return n;if(e.containsPoint(t))return t;if(e.p1.x===e.p2.x){if(n.x===t.x)return null;const i=(n.y-t.y)/(n.x-t.x),o=e.p1.x,r=i*(o-n.x)+n.y;return new I([o,r],-1)}if(n.x===t.x){const t=(e.p1.y-e.p2.y)/(e.p1.x-e.p2.x),i=n.x,o=t*(i-e.p1.x)+e.p1.y;return new I([i,o],-1)}const i=(n.y-t.y)/(n.x-t.x),o=(e.p1.y-e.p2.y)/(e.p1.x-e.p2.x);if(i===o)return null;const r=(o*e.p1.x-i*n.x+n.y-e.p1.y)/(o-i),s=o*(r-e.p1.x)+e.p1.y;return new I([r,s],-1)}(n,t,e);return null!==i?F(n,i):0}function F(n,t){return Math.sqrt(Math.pow(t.x-n.x,2)+Math.pow(t.y-n.y,2))}class A{constructor(n,t,e){this.p1=n,this.p2=t,this.edge=e}isLessThanOtherEdgeKey(n){if(this.matchesOtherKey(n))return!1;if(!T(this.p1,this.p2,n.edge))return!0;const t=G(this.p1,this.p2,this.edge),e=G(this.p1,this.p2,n.edge);if(t>e)return!1;if(t<e)return!0;if(t===e){let t=null;t=n.edge.containsPoint(this.edge.p1)?this.edge.p1:this.edge.p2;return C(this.p1,this.p2,this.edge.getOtherPointInEdge(t))<C(this.p1,this.p2,n.edge.getOtherPointInEdge(t))}}matchesOtherKey(n){return this.edge.areEdgesEqual(n.edge)}}function J(n){!function(n){const t=n._points,e=t.length,i=1;for(var o=0;o<e;o++){z(t[o],e,i,n)}}(n)}function B(n,t){z(t,n._points.length,0,n)}function z(n,t,e,i){const o=i._clonedPoints,r=i._edges,s=i._polygons,a=i.graph,u=n.prevPoint,f=n.nextPoint;!function(n,t){t.sort(((t,e)=>{const i=n.angleToPoint(t),o=n.angleToPoint(e);if(i<o)return-1;if(i>o)return 1;const r=F(n,t),s=F(n,e);return r<s?-1:r>s?1:0}))}(n,o);const h=new x,l=new I([1/0,n.y],-1);for(let e=0;e<t;e++){const t=r[e];if(!t.containsPoint(n)&&T(n,l,t)){if(K(n,t.p1,l)||K(n,t.p2,l))continue;h.addKey(new A(n,l,t))}}h.keys.length>100&&console.log(h.keys.length);const c=[];let d=null,p=null;for(let i=0;i<t;i++){const t=o[i];if(t.isPointEqual(n))continue;if(1===e&&n.angleToPoint(t)>Math.PI)break;if(h.keys.length>0)for(let e=0;e<t.edges.length;e++){const i=t.edges[e];if(-1===D(n,t,i.getOtherPointInEdge(t))){const e=new A(n,t,i),o=h.findKeyPosition(e)-1;-1!==o&&h.keys[o].matchesOtherKey(e)&&h.keys.splice(o,1)}}h.keys.length>100&&console.log(h.keys.length);let r=!1;if(null!==d&&0===D(n,d,t)&&K(n,d,t))if(p){r=!0;for(let n=0;n<h.keys.length;n++){const e=h.keys[n];if(!e.edge.containsPoint(d)&&T(d,t,e.edge)){r=!1;break}}r&&H(d,t,s)&&(r=!1)}else r=!1;else 0===h.keys.length?r=!0:T(n,t,h.keys[0].edge)||(r=!0);const a=t.isPointEqual(u)||t.isPointEqual(f);r&&!a&&(r=!H(n,t,s)),r&&c.push(t);for(let e=0;e<t.edges.length;e++){const i=t.edges[e];if(!i.containsPoint(n)&&1===D(n,t,i.getOtherPointInEdge(t))){const e=new A(n,t,i);h.addKey(e)}}d=t,p=r}const g=n.nodeId;a.addNode(g,{x:n.x,y:n.y});for(var y=0;y<c.length;y++){const n=c[y].nodeId;a.addNode(n,{x:c[y].x,y:c[y].y}),a.addLink(g,n)}}function H(n,t,e){if(n.polygonID!==t.polygonID)return!1;if(-1===n.polygonID||-1===t.polygonID)return!1;return function(n,t){const e=new I([1/0,n.y],-1);let i=0,o=!1,r=0;for(let s=0;s<t.length;s++){const a=t[s];if(n.y<a.p1.y&&n.y<a.p2.y)continue;if(n.y>a.p1.y&&n.y>a.p2.y)continue;const u=0===D(n,a.p1,e)&&a.p1.x>n.x,f=0===D(n,a.p2,e)&&a.p2.x>n.x,h=u?a.p1:a.p2;u||f?(r=a.getOtherPointInEdge(h).y>n.y?r++:r--,o?(0===r&&i++,o=!1,r=0):o=!0):T(n,e,a)&&i++}return i%2!=0}(new I([(n.x+t.x)/2,(n.y+t.y)/2],-1),e[n.polygonID].edges)}class Q{constructor(){this.edges=[],this.bbox=[1/0,1/0,-1/0,-1/0]}}class R{constructor(n,t){this.p1=n,this.p2=t,n.edges.push(this),t.edges.push(this)}getOtherPointInEdge(n){return this.p1.isPointEqual(n)?this.p2:this.p1}areEdgesEqual(n){return!(!this.p1.isPointEqual(n.p1)||!this.p2.isPointEqual(n.p2))||!(!this.p1.isPointEqual(n.p2)||!this.p2.isPointEqual(n.p1))}containsPoint(n){return this.p1.isPointEqual(n)||this.p2.isPointEqual(n)}}function V(n,t){t[0]=Math.min(t[0],n.x),t[1]=Math.min(t[1],n.y),t[2]=Math.max(t[2],n.x),t[3]=Math.max(t[3],n.y)}function W(n,t,e){t.prevPoint=n,t.nextPoint=e}return class{constructor(n,e){this._geojson=n,this.graph=null,this._points=[],this._clonedPoints=[],this._edges=[],this._polygons=[],this._lastOrigin=null,this._lastDestination=null,function(n){const t="Feature"===n._geojson.type?n._geojson.geometry:n._geojson;let e=t.coordinates;"Polygon"===t.type&&(e=[e]);for(let t=0;t<e.length;t++){const i=new Q,o=i.edges,r=i.bbox;n._polygons.push(i);for(let i=0;i<e[t].length;i++){let s=new I(e[t][i][0],t),a=new I(e[t][i][1],t);V(s,r),V(a,r),s.nextPoint=a;let u=new I(e[t][i][2],t);W(s,a,u),n._points.push(s);let f=new R(s,a);n._edges.push(f),o.push(f);const h=s;s=a,a=u;for(let h=2;h<e[t][i].length-2;h++){n._points.push(s),u=new I(e[t][i][h+1],t),V(u,r),W(s,a,u);const l=new R(s,a);n._edges.push(l),o.push(l),s=a,a=u,f=l}W(s,a,h);const l=new R(f.p2,a);n._edges.push(l),o.push(l);const c=new R(a,h);W(a,h,h.nextPoint),n._edges.push(c),o.push(c),n._points.push(s),n._points.push(u)}}n._clonedPoints=n._points.slice(0)}(this),e?this.graph=g(e):(this.graph=t(),J(this))}getNodeIdByLatLon(n){for(var t=0;t<this._points.length;t++)if(this._points[t].x===n[0]&&this._points[t].y===n[1])return this._points[t].nodeId;return null}saveGraphToJson(){return k(this.graph)}addStartAndEndPointsToGraph(n,t){return null!==this._lastOrigin&&(this.graph.removeNode(this._lastOrigin.nodeId),this.graph.removeNode(this._lastDestination.nodeId)),this._lastOrigin=new I(n.geometry.coordinates,-1),this._lastDestination=new I(t.geometry.coordinates,-1),B(this,this._lastOrigin),B(this,this._lastDestination),{startNode:this._lastOrigin,endNode:this._lastDestination}}}}));
